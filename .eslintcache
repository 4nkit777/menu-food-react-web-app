[{"/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/index.js":"1","/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/App.js":"2","/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/data.js":"3","/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/components/Categories.js":"4","/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/components/Menu.js":"5"},{"size":222,"mtime":1608674208862,"results":"6","hashOfConfig":"7"},{"size":1068,"mtime":1608695814048,"results":"8","hashOfConfig":"7"},{"size":2253,"mtime":1608678187657,"results":"9","hashOfConfig":"7"},{"size":466,"mtime":1608695090217,"results":"10","hashOfConfig":"7"},{"size":1259,"mtime":1608695876277,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"13vqwuk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/index.js",[],["24","25"],"/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/App.js",["26"],"import React, { useState } from 'react';\nimport menu from './data';\nimport './App.css';\nimport Categories from './components/Categories';\nimport Menu from './components/Menu';\n\nconst allCategories = ['all', ...new Set(menu.map((i) => i.category))];\nconsole.log(allCategories);\n\nfunction App() {\n  const [menuItems, setMenuItems] = useState(menu);\n  const [categories, setCategories] = useState(allCategories);\n\n  const filterItems = (category) => {\n    if (category === 'all') {\n      setMenuItems(menu);\n      return;\n    }\n\n    const newItems = menu.filter((t) => t.category === category);\n    setMenuItems(newItems);\n  };\n\n  return (\n    <main className='container mt-5'>\n      <section >\n        <div className='title text-center d-flex flex-column align-items-center'>\n          <h2>Our Menu</h2>\n          <div className='bg-primary' style={{ width: '150px', height: '5px'}}></div>\n        </div>\n        <Categories filterItems={filterItems} categories={categories} />\n        <Menu items={menuItems} />\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/data.js",[],"/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/components/Categories.js",[],"/home/elliot-alderson/Documents/web-dev/food-menu-app/food-menu-web-app/src/components/Menu.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":12,"column":22,"nodeType":"33","messageId":"34","endLine":12,"endColumn":35},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'setCategories' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]